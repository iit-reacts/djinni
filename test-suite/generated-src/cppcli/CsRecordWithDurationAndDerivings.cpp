// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from duration.djinni

#include "CsRecordWithDurationAndDerivings.hpp"  // my header
#include "Marshal.hpp"
#include <memory>

namespace Djinni { namespace TestSuite {

RecordWithDurationAndDerivings::RecordWithDurationAndDerivings(System::TimeSpan dt)
: _dt(dt)
{}

System::TimeSpan RecordWithDurationAndDerivings::Dt::get()
{
    return _dt;
}

System::String^ RecordWithDurationAndDerivings::ToString()
{
    return "RecordWithDurationAndDerivings[TODO]"; // TODO
}

bool RecordWithDurationAndDerivings::Equals(RecordWithDurationAndDerivings^ other) {
    if (ReferenceEquals(nullptr, other)) return false;
    if (ReferenceEquals(this, other)) return true;
    return Dt.Equals(other->Dt);
}

bool RecordWithDurationAndDerivings::Equals(System::Object^ obj) {
    if (ReferenceEquals(nullptr, obj)) return false;
    if (ReferenceEquals(this, obj)) return true;
    return obj->GetType() == GetType() && Equals((RecordWithDurationAndDerivings^) obj);
}

int RecordWithDurationAndDerivings::GetHashCode() {
    auto hashCode = Dt.GetHashCode();
    return hashCode;
}

int RecordWithDurationAndDerivings::CompareTo(RecordWithDurationAndDerivings^ other) {
    if (ReferenceEquals(this, other)) return 0;
    if (ReferenceEquals(nullptr, other)) return 1;
    return Dt.CompareTo(other->Dt);
}

RecordWithDurationAndDerivings::CppType RecordWithDurationAndDerivings::ToCpp(RecordWithDurationAndDerivings::CsType^ cs)
{
    ASSERT(cs != nullptr);
    return {::djinni::Duration<::djinni::F64, ::djinni::Duration_ns>::ToCpp(cs->Dt)};
}

RecordWithDurationAndDerivings::CsType^ RecordWithDurationAndDerivings::FromCpp(const RecordWithDurationAndDerivings::CppType& cpp)
{
    return gcnew RecordWithDurationAndDerivings::CsType(::djinni::Duration<::djinni::F64, ::djinni::Duration_ns>::FromCpp(cpp.dt));
}

} }  // namespace Djinni::TestSuite
