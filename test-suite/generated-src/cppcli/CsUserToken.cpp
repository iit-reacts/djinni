// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from user_token.djinni

#include "CsUserToken.hpp"  // my header
#include "Error.hpp"
#include "Marshal.hpp"
#include "WrapperCache.hpp"

namespace Djinni { namespace TestSuite {

ref class UserTokenCppProxy : public UserToken {
    using CppType = std::shared_ptr<::testsuite::UserToken>;
    using HandleType = ::djinni::CppProxyCache::Handle<CppType>;
public:
    UserTokenCppProxy(const CppType& cppRef) : _cppRefHandle(new HandleType(cppRef)) {}

    System::String^ Whoami() override {
        try {
            auto cs_result = _cppRefHandle->get()->whoami();
            return ::djinni::String::FromCpp(cs_result);
        } DJINNI_TRANSLATE_EXCEPTIONS()
        return nullptr; // Unreachable! (Silencing compiler warnings.)
    }

    CppType djinni_private_get_proxied_cpp_object() {
        return _cppRefHandle->get();
    }

private:
    AutoPtr<HandleType> _cppRefHandle;
};

class UserTokenCsProxy : public ::testsuite::UserToken {
    using CsType = ::Djinni::TestSuite::UserToken^;
    using CsRefType = ::djinni::CsRef<CsType>;
    using HandleType = ::djinni::CsProxyCache::Handle<::djinni::CsRef<CsType>>;
public:
    UserTokenCsProxy(CsRefType cs) : m_djinni_private_proxy_handle(std::move(cs)) {}
    UserTokenCsProxy(const ::djinni::CsRef<System::Object^>& ptr) : UserTokenCsProxy(CsRefType(dynamic_cast<CsType>(ptr.get()))) {}

    std::string whoami() override
    {
        auto cs_result = djinni_private_get_proxied_cs_object()->Whoami();
        // TODO check cs_result for null
        return ::djinni::String::ToCpp(cs_result);
    }

    CsType djinni_private_get_proxied_cs_object() {
        return m_djinni_private_proxy_handle.get().get();
    }

private:
    HandleType m_djinni_private_proxy_handle;
};

UserToken::CppType UserToken::ToCpp(UserToken::CsType cs)
{
    if (!cs) {
        return nullptr;
    }
    if (auto cs_ref = dynamic_cast<UserTokenCppProxy^>(cs))
    {
        return cs_ref->djinni_private_get_proxied_cpp_object();
    }
    return ::djinni::get_cs_proxy<UserTokenCsProxy>(cs);
}

UserToken::CsType UserToken::FromCppOpt(const UserToken::CppOptType& cpp)
{
    if (!cpp) {
        return nullptr;
    }
    if (auto cpp_ptr = dynamic_cast<UserTokenCsProxy*>(cpp.get())) {
        return cpp_ptr->djinni_private_get_proxied_cs_object();
    }
    return ::djinni::get_cpp_proxy<UserTokenCppProxy^>(cpp);
}

} }  // namespace Djinni::TestSuite
