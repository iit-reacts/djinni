// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from derivings.djinni

#include "CsRecordWithDerivings.hpp"  // my header
#include "Marshal.hpp"
#include <memory>

namespace Djinni { namespace TestSuite {

RecordWithDerivings::RecordWithDerivings(char eight,
                                         short sixteen,
                                         int thirtytwo,
                                         __int64 sixtyfour,
                                         float fthirtytwo,
                                         double fsixtyfour,
                                         System::DateTime d,
                                         System::String^ s)
: _eight(eight)
, _sixteen(sixteen)
, _thirtytwo(thirtytwo)
, _sixtyfour(sixtyfour)
, _fthirtytwo(fthirtytwo)
, _fsixtyfour(fsixtyfour)
, _d(d)
, _s(s)
{}

char RecordWithDerivings::Eight::get()
{
    return _eight;
}

short RecordWithDerivings::Sixteen::get()
{
    return _sixteen;
}

int RecordWithDerivings::Thirtytwo::get()
{
    return _thirtytwo;
}

__int64 RecordWithDerivings::Sixtyfour::get()
{
    return _sixtyfour;
}

float RecordWithDerivings::Fthirtytwo::get()
{
    return _fthirtytwo;
}

double RecordWithDerivings::Fsixtyfour::get()
{
    return _fsixtyfour;
}

System::DateTime RecordWithDerivings::D::get()
{
    return _d;
}

System::String^ RecordWithDerivings::S::get()
{
    return _s;
}

System::String^ RecordWithDerivings::ToString()
{
    return "RecordWithDerivings[TODO]"; // TODO
}

bool RecordWithDerivings::Equals(RecordWithDerivings^ other) {
    if (ReferenceEquals(nullptr, other)) return false;
    if (ReferenceEquals(this, other)) return true;
    return Eight == other->Eight && Sixteen == other->Sixteen && Thirtytwo == other->Thirtytwo && Sixtyfour == other->Sixtyfour && Fthirtytwo == other->Fthirtytwo && Fsixtyfour == other->Fsixtyfour && D.Equals(other->D) && S->Equals(other->S);
}

bool RecordWithDerivings::Equals(System::Object^ obj) {
    if (ReferenceEquals(nullptr, obj)) return false;
    if (ReferenceEquals(this, obj)) return true;
    return obj->GetType() == GetType() && Equals((RecordWithDerivings^) obj);
}

int RecordWithDerivings::GetHashCode() {
    auto hashCode = Eight.GetHashCode();
    hashCode = (hashCode * 397) ^ Sixteen.GetHashCode();
    hashCode = (hashCode * 397) ^ Thirtytwo.GetHashCode();
    hashCode = (hashCode * 397) ^ Sixtyfour.GetHashCode();
    hashCode = (hashCode * 397) ^ Fthirtytwo.GetHashCode();
    hashCode = (hashCode * 397) ^ Fsixtyfour.GetHashCode();
    hashCode = (hashCode * 397) ^ D.GetHashCode();
    hashCode = (hashCode * 397) ^ S->GetHashCode();
    return hashCode;
}

int RecordWithDerivings::CompareTo(RecordWithDerivings^ other) {
    if (ReferenceEquals(this, other)) return 0;
    if (ReferenceEquals(nullptr, other)) return 1;
    auto eightComparison = Eight.CompareTo(other->Eight);
    if (eightComparison != 0) return eightComparison;
    auto sixteenComparison = Sixteen.CompareTo(other->Sixteen);
    if (sixteenComparison != 0) return sixteenComparison;
    auto thirtytwoComparison = Thirtytwo.CompareTo(other->Thirtytwo);
    if (thirtytwoComparison != 0) return thirtytwoComparison;
    auto sixtyfourComparison = Sixtyfour.CompareTo(other->Sixtyfour);
    if (sixtyfourComparison != 0) return sixtyfourComparison;
    auto fthirtytwoComparison = Fthirtytwo.CompareTo(other->Fthirtytwo);
    if (fthirtytwoComparison != 0) return fthirtytwoComparison;
    auto fsixtyfourComparison = Fsixtyfour.CompareTo(other->Fsixtyfour);
    if (fsixtyfourComparison != 0) return fsixtyfourComparison;
    auto dComparison = D.CompareTo(other->D);
    if (dComparison != 0) return dComparison;
    return System::String::Compare(S, other->S, System::StringComparison::Ordinal);
}

RecordWithDerivings::CppType RecordWithDerivings::ToCpp(RecordWithDerivings::CsType^ cs)
{
    ASSERT(cs != nullptr);
    return {::djinni::I8::ToCpp(cs->Eight),
            ::djinni::I16::ToCpp(cs->Sixteen),
            ::djinni::I32::ToCpp(cs->Thirtytwo),
            ::djinni::I64::ToCpp(cs->Sixtyfour),
            ::djinni::F32::ToCpp(cs->Fthirtytwo),
            ::djinni::F64::ToCpp(cs->Fsixtyfour),
            ::djinni::Date::ToCpp(cs->D),
            ::djinni::String::ToCpp(cs->S)};
}

RecordWithDerivings::CsType^ RecordWithDerivings::FromCpp(const RecordWithDerivings::CppType& cpp)
{
    return gcnew RecordWithDerivings::CsType(::djinni::I8::FromCpp(cpp.eight),
                                             ::djinni::I16::FromCpp(cpp.sixteen),
                                             ::djinni::I32::FromCpp(cpp.thirtytwo),
                                             ::djinni::I64::FromCpp(cpp.sixtyfour),
                                             ::djinni::F32::FromCpp(cpp.fthirtytwo),
                                             ::djinni::F64::FromCpp(cpp.fsixtyfour),
                                             ::djinni::Date::FromCpp(cpp.d),
                                             ::djinni::String::FromCpp(cpp.s));
}

} }  // namespace Djinni::TestSuite
