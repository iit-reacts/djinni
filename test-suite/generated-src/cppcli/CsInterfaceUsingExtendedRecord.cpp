// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from extended_record.djinni

#include "CsInterfaceUsingExtendedRecord.hpp"  // my header
#include "Error.hpp"
#include "Marshal.hpp"
#include "WrapperCache.hpp"
#include "extended_record.hpp"

namespace Djinni { namespace TestSuite {

ref class InterfaceUsingExtendedRecordCppProxy : public InterfaceUsingExtendedRecord {
    using CppType = std::shared_ptr<::testsuite::InterfaceUsingExtendedRecord>;
    using HandleType = ::djinni::CppProxyCache::Handle<CppType>;
public:
    InterfaceUsingExtendedRecordCppProxy(const CppType& cppRef) : _cppRefHandle(new HandleType(cppRef)) {}

    ExtendedRecord^ Meth(ExtendedRecord^ er) override {
        try {
            auto cs_result = _cppRefHandle->get()->meth(::Djinni::TestSuite::ExtendedRecord::ToCpp(er));
            return ::Djinni::TestSuite::ExtendedRecord::FromCpp(cs_result);
        } DJINNI_TRANSLATE_EXCEPTIONS()
        return nullptr; // Unreachable! (Silencing compiler warnings.)
    }

    CppType djinni_private_get_proxied_cpp_object() {
        return _cppRefHandle->get();
    }

private:
    AutoPtr<HandleType> _cppRefHandle;
};

InterfaceUsingExtendedRecord::CppType InterfaceUsingExtendedRecord::ToCpp(InterfaceUsingExtendedRecord::CsType cs)
{
    if (!cs) {
        return nullptr;
    }
    return dynamic_cast<InterfaceUsingExtendedRecordCppProxy^>(cs)->djinni_private_get_proxied_cpp_object();
}

InterfaceUsingExtendedRecord::CsType InterfaceUsingExtendedRecord::FromCppOpt(const InterfaceUsingExtendedRecord::CppOptType& cpp)
{
    if (!cpp) {
        return nullptr;
    }
    return ::djinni::get_cpp_proxy<InterfaceUsingExtendedRecordCppProxy^>(cpp);
}

} }  // namespace Djinni::TestSuite
