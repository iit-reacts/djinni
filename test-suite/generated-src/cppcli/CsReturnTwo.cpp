// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from multiple_inheritance.djinni

#include "CsReturnTwo.hpp"  // my header
#include "Error.hpp"
#include "Marshal.hpp"
#include "WrapperCache.hpp"

namespace Djinni { namespace TestSuite {

ReturnTwo^ ReturnTwo::GetInstance() {
    try {
        auto cs_result = ::testsuite::ReturnTwo::get_instance();
        return ::Djinni::TestSuite::ReturnTwo::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return nullptr; // Unreachable! (Silencing compiler warnings.)
}

ref class ReturnTwoCppProxy : public ReturnTwo {
    using CppType = std::shared_ptr<::testsuite::ReturnTwo>;
    using HandleType = ::djinni::CppProxyCache::Handle<CppType>;
public:
    ReturnTwoCppProxy(const CppType& cppRef) : _cppRefHandle(new HandleType(cppRef)) {}

    char DoReturnTwo() override {
        try {
            auto cs_result = _cppRefHandle->get()->return_two();
            return ::djinni::I8::FromCpp(cs_result);
        } DJINNI_TRANSLATE_EXCEPTIONS()
        return 0; // Unreachable! (Silencing compiler warnings.)
    }

    CppType djinni_private_get_proxied_cpp_object() {
        return _cppRefHandle->get();
    }

private:
    AutoPtr<HandleType> _cppRefHandle;
};

ReturnTwo::CppType ReturnTwo::ToCpp(ReturnTwo::CsType cs)
{
    if (!cs) {
        return nullptr;
    }
    return dynamic_cast<ReturnTwoCppProxy^>(cs)->djinni_private_get_proxied_cpp_object();
}

ReturnTwo::CsType ReturnTwo::FromCppOpt(const ReturnTwo::CppOptType& cpp)
{
    if (!cpp) {
        return nullptr;
    }
    return ::djinni::get_cpp_proxy<ReturnTwoCppProxy^>(cpp);
}

} }  // namespace Djinni::TestSuite
