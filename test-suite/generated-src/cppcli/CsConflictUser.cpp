// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from test.djinni

#include "CsConflictUser.hpp"  // my header
#include "Error.hpp"
#include "Marshal.hpp"
#include "WrapperCache.hpp"

namespace Djinni { namespace TestSuite {

ref class ConflictUserCppProxy : public ConflictUser {
    using CppType = std::shared_ptr<::testsuite::ConflictUser>;
    using HandleType = ::djinni::CppProxyCache::Handle<CppType>;
public:
    ConflictUserCppProxy(const CppType& cppRef) : _cppRefHandle(new HandleType(cppRef)) {}

    ::Djinni::TestSuite::Conflict^ Conflict() override {
        try {
            auto cs_result = _cppRefHandle->get()->Conflict();
            return ::Djinni::TestSuite::Conflict::FromCpp(cs_result);
        } DJINNI_TRANSLATE_EXCEPTIONS()
        return nullptr; // Unreachable! (Silencing compiler warnings.)
    }

    bool ConflictArg(System::Collections::Generic::HashSet<::Djinni::TestSuite::Conflict^>^ cs) override {
        try {
            auto cs_result = _cppRefHandle->get()->conflict_arg(::djinni::Set<::Djinni::TestSuite::Conflict>::ToCpp(cs));
            return ::djinni::Bool::FromCpp(cs_result);
        } DJINNI_TRANSLATE_EXCEPTIONS()
        return 0; // Unreachable! (Silencing compiler warnings.)
    }

    CppType djinni_private_get_proxied_cpp_object() {
        return _cppRefHandle->get();
    }

private:
    AutoPtr<HandleType> _cppRefHandle;
};

ConflictUser::CppType ConflictUser::ToCpp(ConflictUser::CsType cs)
{
    if (!cs) {
        return nullptr;
    }
    return dynamic_cast<ConflictUserCppProxy^>(cs)->djinni_private_get_proxied_cpp_object();
}

ConflictUser::CsType ConflictUser::FromCppOpt(const ConflictUser::CppOptType& cpp)
{
    if (!cpp) {
        return nullptr;
    }
    return ::djinni::get_cpp_proxy<ConflictUserCppProxy^>(cpp);
}

} }  // namespace Djinni::TestSuite
