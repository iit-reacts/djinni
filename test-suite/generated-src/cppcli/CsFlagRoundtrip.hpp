// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from enum.djinni

#pragma once

#include "CsAccessFlags.hpp"
#include "CsEmptyFlags.hpp"
#include "flag_roundtrip.hpp"
#include <memory>

namespace Djinni { namespace TestSuite {

public ref class FlagRoundtrip abstract {
public:
    static AccessFlags RoundtripAccess(AccessFlags flag);

    static EmptyFlags RoundtripEmpty(EmptyFlags flag);

    static System::Nullable<AccessFlags> RoundtripAccessBoxed(System::Nullable<AccessFlags> flag);

    static System::Nullable<EmptyFlags> RoundtripEmptyBoxed(System::Nullable<EmptyFlags> flag);

internal:
    using CppType = std::shared_ptr<::testsuite::FlagRoundtrip>;
    using CppOptType = std::shared_ptr<::testsuite::FlagRoundtrip>;
    using CsType = FlagRoundtrip^;

    static CppType ToCpp(CsType cs);
    static CsType FromCppOpt(const CppOptType& cpp);
    static CsType FromCpp(const CppType& cpp) { return FromCppOpt(cpp); }
};

} }  // namespace Djinni::TestSuite
