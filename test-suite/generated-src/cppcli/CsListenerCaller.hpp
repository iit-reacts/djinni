// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from multiple_inheritance.djinni

#pragma once

#include "CsFirstListener.hpp"
#include "CsSecondListener.hpp"
#include "listener_caller.hpp"
#include <memory>

namespace Djinni { namespace TestSuite {

public ref class ListenerCaller abstract {
public:
    static ListenerCaller^ Init(FirstListener^ firstL, SecondListener^ secondL);

    virtual void CallFirst() abstract;

    virtual void CallSecond() abstract;

internal:
    using CppType = std::shared_ptr<::testsuite::ListenerCaller>;
    using CppOptType = std::shared_ptr<::testsuite::ListenerCaller>;
    using CsType = ListenerCaller^;

    static CppType ToCpp(CsType cs);
    static CsType FromCppOpt(const CppOptType& cpp);
    static CsType FromCpp(const CppType& cpp) { return FromCppOpt(cpp); }
};

} }  // namespace Djinni::TestSuite
