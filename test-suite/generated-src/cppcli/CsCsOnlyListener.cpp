// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from single_language_interfaces.djinni

#include "CsCsOnlyListener.hpp"  // my header
#include "Error.hpp"
#include "Marshal.hpp"
#include "WrapperCache.hpp"

namespace Djinni { namespace TestSuite {

class CsOnlyListenerCsProxy : public ::testsuite::CsOnlyListener {
    using CsType = ::Djinni::TestSuite::CsOnlyListener^;
    using CsRefType = ::djinni::CsRef<CsType>;
    using HandleType = ::djinni::CsProxyCache::Handle<::djinni::CsRef<CsType>>;
public:
    CsOnlyListenerCsProxy(CsRefType cs) : m_djinni_private_proxy_handle(std::move(cs)) {}
    CsOnlyListenerCsProxy(const ::djinni::CsRef<System::Object^>& ptr) : CsOnlyListenerCsProxy(CsRefType(dynamic_cast<CsType>(ptr.get()))) {}

    CsType djinni_private_get_proxied_cs_object() {
        return m_djinni_private_proxy_handle.get().get();
    }

private:
    HandleType m_djinni_private_proxy_handle;
};

CsOnlyListener::CppType CsOnlyListener::ToCpp(CsOnlyListener::CsType cs)
{
    if (!cs) {
        return nullptr;
    }
    return ::djinni::get_cs_proxy<CsOnlyListenerCsProxy>(cs);
}

CsOnlyListener::CsType CsOnlyListener::FromCppOpt(const CsOnlyListener::CppOptType& cpp)
{
    if (!cpp) {
        return nullptr;
    }
    return dynamic_cast<CsOnlyListenerCsProxy*>(cpp.get())->djinni_private_get_proxied_cs_object();
}

} }  // namespace Djinni::TestSuite
