// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from derivings.djinni

#pragma once

#include "record_with_derivings.hpp"

namespace Djinni { namespace TestSuite {

public ref class RecordWithDerivings : System::IComparable<RecordWithDerivings^>, System::IEquatable<RecordWithDerivings^> {
public:

    property char Eight
    {
        char get();
    }

    property short Sixteen
    {
        short get();
    }

    property int Thirtytwo
    {
        int get();
    }

    property __int64 Sixtyfour
    {
        __int64 get();
    }

    property float Fthirtytwo
    {
        float get();
    }

    property double Fsixtyfour
    {
        double get();
    }

    property System::DateTime D
    {
        System::DateTime get();
    }

    property System::String^ S
    {
        System::String^ get();
    }

    RecordWithDerivings(char eight,
                        short sixteen,
                        int thirtytwo,
                        __int64 sixtyfour,
                        float fthirtytwo,
                        double fsixtyfour,
                        System::DateTime d,
                        System::String^ s);

    System::String^ ToString() override;

    virtual bool Equals(RecordWithDerivings^ other);
    bool Equals(System::Object^ obj) override;
    int GetHashCode() override;

    virtual int CompareTo(RecordWithDerivings^ other);
internal:
    using CppType = ::testsuite::RecordWithDerivings;
    using CsType = RecordWithDerivings;

    static CppType ToCpp(CsType^ cs);
    static CsType^ FromCpp(const CppType& cpp);

private:
    char _eight;
    short _sixteen;
    int _thirtytwo;
    __int64 _sixtyfour;
    float _fthirtytwo;
    double _fsixtyfour;
    System::DateTime _d;
    System::String^ _s;
};

} }  // namespace Djinni::TestSuite
