// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from duration.djinni

#include "CsTestDuration.hpp"  // my header
#include "Error.hpp"
#include "Marshal.hpp"
#include "WrapperCache.hpp"

namespace Djinni { namespace TestSuite {

System::String^ TestDuration::HoursString(System::TimeSpan dt) {
    try {
        auto cs_result = ::testsuite::TestDuration::hoursString(::djinni::Duration<::djinni::I32, ::djinni::Duration_h>::ToCpp(dt));
        return ::djinni::String::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return nullptr; // Unreachable! (Silencing compiler warnings.)
}

System::String^ TestDuration::MinutesString(System::TimeSpan dt) {
    try {
        auto cs_result = ::testsuite::TestDuration::minutesString(::djinni::Duration<::djinni::I32, ::djinni::Duration_min>::ToCpp(dt));
        return ::djinni::String::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return nullptr; // Unreachable! (Silencing compiler warnings.)
}

System::String^ TestDuration::SecondsString(System::TimeSpan dt) {
    try {
        auto cs_result = ::testsuite::TestDuration::secondsString(::djinni::Duration<::djinni::I32, ::djinni::Duration_s>::ToCpp(dt));
        return ::djinni::String::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return nullptr; // Unreachable! (Silencing compiler warnings.)
}

System::String^ TestDuration::MillisString(System::TimeSpan dt) {
    try {
        auto cs_result = ::testsuite::TestDuration::millisString(::djinni::Duration<::djinni::I32, ::djinni::Duration_ms>::ToCpp(dt));
        return ::djinni::String::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return nullptr; // Unreachable! (Silencing compiler warnings.)
}

System::String^ TestDuration::MicrosString(System::TimeSpan dt) {
    try {
        auto cs_result = ::testsuite::TestDuration::microsString(::djinni::Duration<::djinni::I32, ::djinni::Duration_us>::ToCpp(dt));
        return ::djinni::String::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return nullptr; // Unreachable! (Silencing compiler warnings.)
}

System::String^ TestDuration::NanosString(System::TimeSpan dt) {
    try {
        auto cs_result = ::testsuite::TestDuration::nanosString(::djinni::Duration<::djinni::I32, ::djinni::Duration_ns>::ToCpp(dt));
        return ::djinni::String::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return nullptr; // Unreachable! (Silencing compiler warnings.)
}

System::TimeSpan TestDuration::Hours(int count) {
    try {
        auto cs_result = ::testsuite::TestDuration::hours(::djinni::I32::ToCpp(count));
        return ::djinni::Duration<::djinni::I32, ::djinni::Duration_h>::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return System::TimeSpan(); // Unreachable! (Silencing compiler warnings.)
}

System::TimeSpan TestDuration::Minutes(int count) {
    try {
        auto cs_result = ::testsuite::TestDuration::minutes(::djinni::I32::ToCpp(count));
        return ::djinni::Duration<::djinni::I32, ::djinni::Duration_min>::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return System::TimeSpan(); // Unreachable! (Silencing compiler warnings.)
}

System::TimeSpan TestDuration::Seconds(int count) {
    try {
        auto cs_result = ::testsuite::TestDuration::seconds(::djinni::I32::ToCpp(count));
        return ::djinni::Duration<::djinni::I32, ::djinni::Duration_s>::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return System::TimeSpan(); // Unreachable! (Silencing compiler warnings.)
}

System::TimeSpan TestDuration::Millis(int count) {
    try {
        auto cs_result = ::testsuite::TestDuration::millis(::djinni::I32::ToCpp(count));
        return ::djinni::Duration<::djinni::I32, ::djinni::Duration_ms>::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return System::TimeSpan(); // Unreachable! (Silencing compiler warnings.)
}

System::TimeSpan TestDuration::Micros(int count) {
    try {
        auto cs_result = ::testsuite::TestDuration::micros(::djinni::I32::ToCpp(count));
        return ::djinni::Duration<::djinni::I32, ::djinni::Duration_us>::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return System::TimeSpan(); // Unreachable! (Silencing compiler warnings.)
}

System::TimeSpan TestDuration::Nanos(int count) {
    try {
        auto cs_result = ::testsuite::TestDuration::nanos(::djinni::I32::ToCpp(count));
        return ::djinni::Duration<::djinni::I32, ::djinni::Duration_ns>::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return System::TimeSpan(); // Unreachable! (Silencing compiler warnings.)
}

System::TimeSpan TestDuration::Hoursf(double count) {
    try {
        auto cs_result = ::testsuite::TestDuration::hoursf(::djinni::F64::ToCpp(count));
        return ::djinni::Duration<::djinni::F64, ::djinni::Duration_h>::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return System::TimeSpan(); // Unreachable! (Silencing compiler warnings.)
}

System::TimeSpan TestDuration::Minutesf(double count) {
    try {
        auto cs_result = ::testsuite::TestDuration::minutesf(::djinni::F64::ToCpp(count));
        return ::djinni::Duration<::djinni::F64, ::djinni::Duration_min>::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return System::TimeSpan(); // Unreachable! (Silencing compiler warnings.)
}

System::TimeSpan TestDuration::Secondsf(double count) {
    try {
        auto cs_result = ::testsuite::TestDuration::secondsf(::djinni::F64::ToCpp(count));
        return ::djinni::Duration<::djinni::F64, ::djinni::Duration_s>::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return System::TimeSpan(); // Unreachable! (Silencing compiler warnings.)
}

System::TimeSpan TestDuration::Millisf(double count) {
    try {
        auto cs_result = ::testsuite::TestDuration::millisf(::djinni::F64::ToCpp(count));
        return ::djinni::Duration<::djinni::F64, ::djinni::Duration_ms>::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return System::TimeSpan(); // Unreachable! (Silencing compiler warnings.)
}

System::TimeSpan TestDuration::Microsf(double count) {
    try {
        auto cs_result = ::testsuite::TestDuration::microsf(::djinni::F64::ToCpp(count));
        return ::djinni::Duration<::djinni::F64, ::djinni::Duration_us>::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return System::TimeSpan(); // Unreachable! (Silencing compiler warnings.)
}

System::TimeSpan TestDuration::Nanosf(double count) {
    try {
        auto cs_result = ::testsuite::TestDuration::nanosf(::djinni::F64::ToCpp(count));
        return ::djinni::Duration<::djinni::F64, ::djinni::Duration_ns>::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return System::TimeSpan(); // Unreachable! (Silencing compiler warnings.)
}

System::Nullable<System::TimeSpan> TestDuration::Box(__int64 count) {
    try {
        auto cs_result = ::testsuite::TestDuration::box(::djinni::I64::ToCpp(count));
        return ::djinni::Optional<std::experimental::optional, ::djinni::Duration<::djinni::I64, ::djinni::Duration_s>>::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return System::Nullable<System::TimeSpan>(); // Unreachable! (Silencing compiler warnings.)
}

__int64 TestDuration::Unbox(System::Nullable<System::TimeSpan> dt) {
    try {
        auto cs_result = ::testsuite::TestDuration::unbox(::djinni::Optional<std::experimental::optional, ::djinni::Duration<::djinni::I64, ::djinni::Duration_s>>::ToCpp(dt));
        return ::djinni::I64::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return 0; // Unreachable! (Silencing compiler warnings.)
}

ref class TestDurationCppProxy : public TestDuration {
    using CppType = std::shared_ptr<::testsuite::TestDuration>;
    using HandleType = ::djinni::CppProxyCache::Handle<CppType>;
public:
    TestDurationCppProxy(const CppType& cppRef) : _cppRefHandle(new HandleType(cppRef)) {}

    CppType djinni_private_get_proxied_cpp_object() {
        return _cppRefHandle->get();
    }

private:
    AutoPtr<HandleType> _cppRefHandle;
};

TestDuration::CppType TestDuration::ToCpp(TestDuration::CsType cs)
{
    if (!cs) {
        return nullptr;
    }
    return dynamic_cast<TestDurationCppProxy^>(cs)->djinni_private_get_proxied_cpp_object();
}

TestDuration::CsType TestDuration::FromCppOpt(const TestDuration::CppOptType& cpp)
{
    if (!cpp) {
        return nullptr;
    }
    return ::djinni::get_cpp_proxy<TestDurationCppProxy^>(cpp);
}

} }  // namespace Djinni::TestSuite
