// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from enum.djinni

#include "CsEnumUsageRecord.hpp"  // my header
#include "Marshal.hpp"
#include <memory>

namespace Djinni { namespace TestSuite {

EnumUsageRecord::EnumUsageRecord(Color e,
                                 System::Nullable<Color> o,
                                 System::Collections::Generic::List<Color>^ l,
                                 System::Collections::Generic::HashSet<Color>^ s,
                                 System::Collections::Generic::Dictionary<Color, Color>^ m)
: _e(e)
, _o(o)
, _l(l)
, _s(s)
, _m(m)
{}

Color EnumUsageRecord::E::get()
{
    return _e;
}

System::Nullable<Color> EnumUsageRecord::O::get()
{
    return _o;
}

System::Collections::Generic::List<Color>^ EnumUsageRecord::L::get()
{
    return _l;
}

System::Collections::Generic::HashSet<Color>^ EnumUsageRecord::S::get()
{
    return _s;
}

System::Collections::Generic::Dictionary<Color, Color>^ EnumUsageRecord::M::get()
{
    return _m;
}

System::String^ EnumUsageRecord::ToString()
{
    return "EnumUsageRecord[TODO]"; // TODO
}

EnumUsageRecord::CppType EnumUsageRecord::ToCpp(EnumUsageRecord::CsType^ cs)
{
    ASSERT(cs != nullptr);
    return {::djinni::Enum<::testsuite::color, Color>::ToCpp(cs->E),
            ::djinni::Optional<std::experimental::optional, ::djinni::Enum<::testsuite::color, Color>>::ToCpp(cs->O),
            ::djinni::List<::djinni::Enum<::testsuite::color, Color>>::ToCpp(cs->L),
            ::djinni::Set<::djinni::Enum<::testsuite::color, Color>>::ToCpp(cs->S),
            ::djinni::Map<::djinni::Enum<::testsuite::color, Color>, ::djinni::Enum<::testsuite::color, Color>>::ToCpp(cs->M)};
}

EnumUsageRecord::CsType^ EnumUsageRecord::FromCpp(const EnumUsageRecord::CppType& cpp)
{
    return gcnew EnumUsageRecord::CsType(::djinni::Enum<::testsuite::color, Color>::FromCpp(cpp.e),
                                         ::djinni::Optional<std::experimental::optional, ::djinni::Enum<::testsuite::color, Color>>::FromCpp(cpp.o),
                                         ::djinni::List<::djinni::Enum<::testsuite::color, Color>>::FromCpp(cpp.l),
                                         ::djinni::Set<::djinni::Enum<::testsuite::color, Color>>::FromCpp(cpp.s),
                                         ::djinni::Map<::djinni::Enum<::testsuite::color, Color>, ::djinni::Enum<::testsuite::color, Color>>::FromCpp(cpp.m));
}

} }  // namespace Djinni::TestSuite
