// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from client_interface.djinni

#include "CsClientReturnedRecord.hpp"  // my header
#include "Marshal.hpp"
#include <memory>

namespace Djinni { namespace TestSuite {

ClientReturnedRecord::ClientReturnedRecord(__int64 recordId,
                                           System::String^ content,
                                           System::String^ misc)
: _recordId(recordId)
, _content(content)
, _misc(misc)
{}

__int64 ClientReturnedRecord::RecordId::get()
{
    return _recordId;
}

System::String^ ClientReturnedRecord::Content::get()
{
    return _content;
}

System::String^ ClientReturnedRecord::Misc::get()
{
    return _misc;
}

System::String^ ClientReturnedRecord::ToString()
{
    return "ClientReturnedRecord[TODO]"; // TODO
}

ClientReturnedRecord::CppType ClientReturnedRecord::ToCpp(ClientReturnedRecord::CsType^ cs)
{
    ASSERT(cs != nullptr);
    return {::djinni::I64::ToCpp(cs->RecordId),
            ::djinni::String::ToCpp(cs->Content),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::ToCpp(cs->Misc)};
}

ClientReturnedRecord::CsType^ ClientReturnedRecord::FromCpp(const ClientReturnedRecord::CppType& cpp)
{
    return gcnew ClientReturnedRecord::CsType(::djinni::I64::FromCpp(cpp.record_id),
                                              ::djinni::String::FromCpp(cpp.content),
                                              ::djinni::Optional<std::experimental::optional, ::djinni::String>::FromCpp(cpp.misc));
}

} }  // namespace Djinni::TestSuite
