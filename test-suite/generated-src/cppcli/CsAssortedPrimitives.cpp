// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from primtypes.djinni

#include "CsAssortedPrimitives.hpp"  // my header
#include "Marshal.hpp"
#include <memory>

namespace Djinni { namespace TestSuite {

AssortedPrimitives::AssortedPrimitives(bool b,
                                       char eight,
                                       short sixteen,
                                       int thirtytwo,
                                       __int64 sixtyfour,
                                       float fthirtytwo,
                                       double fsixtyfour,
                                       System::Nullable<bool> oB,
                                       System::Nullable<char> oEight,
                                       System::Nullable<short> oSixteen,
                                       System::Nullable<int> oThirtytwo,
                                       System::Nullable<__int64> oSixtyfour,
                                       System::Nullable<float> oFthirtytwo,
                                       System::Nullable<double> oFsixtyfour)
: _b(b)
, _eight(eight)
, _sixteen(sixteen)
, _thirtytwo(thirtytwo)
, _sixtyfour(sixtyfour)
, _fthirtytwo(fthirtytwo)
, _fsixtyfour(fsixtyfour)
, _oB(oB)
, _oEight(oEight)
, _oSixteen(oSixteen)
, _oThirtytwo(oThirtytwo)
, _oSixtyfour(oSixtyfour)
, _oFthirtytwo(oFthirtytwo)
, _oFsixtyfour(oFsixtyfour)
{}

bool AssortedPrimitives::B::get()
{
    return _b;
}

char AssortedPrimitives::Eight::get()
{
    return _eight;
}

short AssortedPrimitives::Sixteen::get()
{
    return _sixteen;
}

int AssortedPrimitives::Thirtytwo::get()
{
    return _thirtytwo;
}

__int64 AssortedPrimitives::Sixtyfour::get()
{
    return _sixtyfour;
}

float AssortedPrimitives::Fthirtytwo::get()
{
    return _fthirtytwo;
}

double AssortedPrimitives::Fsixtyfour::get()
{
    return _fsixtyfour;
}

System::Nullable<bool> AssortedPrimitives::OB::get()
{
    return _oB;
}

System::Nullable<char> AssortedPrimitives::OEight::get()
{
    return _oEight;
}

System::Nullable<short> AssortedPrimitives::OSixteen::get()
{
    return _oSixteen;
}

System::Nullable<int> AssortedPrimitives::OThirtytwo::get()
{
    return _oThirtytwo;
}

System::Nullable<__int64> AssortedPrimitives::OSixtyfour::get()
{
    return _oSixtyfour;
}

System::Nullable<float> AssortedPrimitives::OFthirtytwo::get()
{
    return _oFthirtytwo;
}

System::Nullable<double> AssortedPrimitives::OFsixtyfour::get()
{
    return _oFsixtyfour;
}

System::String^ AssortedPrimitives::ToString()
{
    return "AssortedPrimitives[TODO]"; // TODO
}

bool AssortedPrimitives::Equals(AssortedPrimitives^ other) {
    if (ReferenceEquals(nullptr, other)) return false;
    if (ReferenceEquals(this, other)) return true;
    return B == other->B && Eight == other->Eight && Sixteen == other->Sixteen && Thirtytwo == other->Thirtytwo && Sixtyfour == other->Sixtyfour && Fthirtytwo == other->Fthirtytwo && Fsixtyfour == other->Fsixtyfour && OB.Equals(other->OB) && OEight.Equals(other->OEight) && OSixteen.Equals(other->OSixteen) && OThirtytwo.Equals(other->OThirtytwo) && OSixtyfour.Equals(other->OSixtyfour) && OFthirtytwo.Equals(other->OFthirtytwo) && OFsixtyfour.Equals(other->OFsixtyfour);
}

bool AssortedPrimitives::Equals(System::Object^ obj) {
    if (ReferenceEquals(nullptr, obj)) return false;
    if (ReferenceEquals(this, obj)) return true;
    return obj->GetType() == GetType() && Equals((AssortedPrimitives^) obj);
}

int AssortedPrimitives::GetHashCode() {
    auto hashCode = B.GetHashCode();
    hashCode = (hashCode * 397) ^ Eight.GetHashCode();
    hashCode = (hashCode * 397) ^ Sixteen.GetHashCode();
    hashCode = (hashCode * 397) ^ Thirtytwo.GetHashCode();
    hashCode = (hashCode * 397) ^ Sixtyfour.GetHashCode();
    hashCode = (hashCode * 397) ^ Fthirtytwo.GetHashCode();
    hashCode = (hashCode * 397) ^ Fsixtyfour.GetHashCode();
    hashCode = (hashCode * 397) ^ OB.GetHashCode();
    hashCode = (hashCode * 397) ^ OEight.GetHashCode();
    hashCode = (hashCode * 397) ^ OSixteen.GetHashCode();
    hashCode = (hashCode * 397) ^ OThirtytwo.GetHashCode();
    hashCode = (hashCode * 397) ^ OSixtyfour.GetHashCode();
    hashCode = (hashCode * 397) ^ OFthirtytwo.GetHashCode();
    hashCode = (hashCode * 397) ^ OFsixtyfour.GetHashCode();
    return hashCode;
}

AssortedPrimitives::CppType AssortedPrimitives::ToCpp(AssortedPrimitives::CsType^ cs)
{
    ASSERT(cs != nullptr);
    return {::djinni::Bool::ToCpp(cs->B),
            ::djinni::I8::ToCpp(cs->Eight),
            ::djinni::I16::ToCpp(cs->Sixteen),
            ::djinni::I32::ToCpp(cs->Thirtytwo),
            ::djinni::I64::ToCpp(cs->Sixtyfour),
            ::djinni::F32::ToCpp(cs->Fthirtytwo),
            ::djinni::F64::ToCpp(cs->Fsixtyfour),
            ::djinni::Optional<std::experimental::optional, ::djinni::Bool>::ToCpp(cs->OB),
            ::djinni::Optional<std::experimental::optional, ::djinni::I8>::ToCpp(cs->OEight),
            ::djinni::Optional<std::experimental::optional, ::djinni::I16>::ToCpp(cs->OSixteen),
            ::djinni::Optional<std::experimental::optional, ::djinni::I32>::ToCpp(cs->OThirtytwo),
            ::djinni::Optional<std::experimental::optional, ::djinni::I64>::ToCpp(cs->OSixtyfour),
            ::djinni::Optional<std::experimental::optional, ::djinni::F32>::ToCpp(cs->OFthirtytwo),
            ::djinni::Optional<std::experimental::optional, ::djinni::F64>::ToCpp(cs->OFsixtyfour)};
}

AssortedPrimitives::CsType^ AssortedPrimitives::FromCpp(const AssortedPrimitives::CppType& cpp)
{
    return gcnew AssortedPrimitives::CsType(::djinni::Bool::FromCpp(cpp.b),
                                            ::djinni::I8::FromCpp(cpp.eight),
                                            ::djinni::I16::FromCpp(cpp.sixteen),
                                            ::djinni::I32::FromCpp(cpp.thirtytwo),
                                            ::djinni::I64::FromCpp(cpp.sixtyfour),
                                            ::djinni::F32::FromCpp(cpp.fthirtytwo),
                                            ::djinni::F64::FromCpp(cpp.fsixtyfour),
                                            ::djinni::Optional<std::experimental::optional, ::djinni::Bool>::FromCpp(cpp.o_b),
                                            ::djinni::Optional<std::experimental::optional, ::djinni::I8>::FromCpp(cpp.o_eight),
                                            ::djinni::Optional<std::experimental::optional, ::djinni::I16>::FromCpp(cpp.o_sixteen),
                                            ::djinni::Optional<std::experimental::optional, ::djinni::I32>::FromCpp(cpp.o_thirtytwo),
                                            ::djinni::Optional<std::experimental::optional, ::djinni::I64>::FromCpp(cpp.o_sixtyfour),
                                            ::djinni::Optional<std::experimental::optional, ::djinni::F32>::FromCpp(cpp.o_fthirtytwo),
                                            ::djinni::Optional<std::experimental::optional, ::djinni::F64>::FromCpp(cpp.o_fsixtyfour));
}

} }  // namespace Djinni::TestSuite
